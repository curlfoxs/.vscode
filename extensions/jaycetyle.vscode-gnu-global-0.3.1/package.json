{
	"name": "vscode-gnu-global",
	"displayName": "C/C++ GNU Global",
	"description": "Intellisense for C/C++ using GNU Global",
	"version": "0.3.1",
	"publisher": "jaycetyle",
	"preview": true,
	"repository": {
		"type": "git",
		"url": "https://github.com/jaycetyle/vscode-gnu-global/"
	},
	"icon": "images/icon-256.png",
	"engines": {
		"vscode": "^1.27.0"
	},
	"categories": [
		"Programming Languages"
	],
	"activationEvents": [
		"onLanguage:cpp",
		"onLanguage:c",
		"onCommand:extension.showGlobalVersion",
		"onCommand:extension.rebuildGtags"
	],
	"main": "./out/extension",
	"contributes": {
		"commands": [
			{
				"command": "extension.showGlobalVersion",
				"title": "Global: Show GNU Global Version"
			},
			{
				"command": "extension.rebuildGtags",
				"title": "Global: Rebuild Gtags Database"
			}
		],
		"configuration": {
			"properties": {
				"gnuGlobal.autoUpdate": {
					"type": [
						"string"
					],
					"enum": [
						"Enabled",
						"Disabled",
						"Default"
					],
					"default": "Default",
					"scope": "resource",
					"description": "Controls whether global should automatically update the tags after file saved. \"Default\": disable autoupdate if GTAGS database size is larger than 50MB. It is recommended to disable this feature if the project is too large."
				},
				"gnuGlobal.completion": {
					"type": [
						"string"
					],
					"enum": [
						"Enabled",
						"Disabled"
					],
					"default": "Enabled",
					"scope": "resource",
					"description": "Enable/disable auto-completion feature."
				},
				"gnuGlobal.gtagsForceCpp": {
					"type": [
						"string"
					],
					"enum": [
						"Enabled",
						"Disabled"
					],
					"default": "Disabled",
					"scope": "resource",
					"description": "If this option is enabled, each file whose suffix is \".h\" is treated as a C++ source file. You need to rebuild gtags if you change this configuration."
				},
				"gnuGlobal.globalExecutable": {
					"type": [
						"string"
					],
					"default": "global",
					"description": "Specify the path to the global."
				},
				"gnuGlobal.gtagsExecutable": {
					"type": [
						"string"
					],
					"default": "gtags",
					"description": "Specify the path to the gtags."
				},
				"gnuGlobal.libraryPath": {
					"type": [
						"array"
					],
					"scope": "resource",
					"description": "(Experimental) Used as the path to search for library functions. If the specified tags is not found in the project, this extension also searches in these paths. Please note that 'Rebuild Gtags Database' doesn't rebuild the tag files for these libraries. You need to build tags for them individually."
				},
				"gnuGlobal.encoding": {
					"type": [
						"string"
					],
					"default": "utf-8",
					"description": "Specify the encoding of the command line output."
				},
				"gnuGlobal.objDirPrefix": {
					"type": [
						"string"
					],
					"default": "",
					"scope": "window",
					"description": "If objDirPrefix is set and objDirPrefix directory exists, gtags creates objDirPrefix/project_dir directory and makes tag files in it. Global will also try to search tag files in such directory. Only support UNIX style filesystem. Windows is not supported."
				},
				"gnuGlobal.gtagSkipSymlink": {
					"type": [
						"string"
					],
					"enum": [
						"None",
						"File",
						"Directory",
						"All"
					],
					"default": "None",
					"scope": "resource",
					"description": "Skip symbolic links while building tag files. Could be None, File, Directory or All. Default is None. (Requires GNU Global 6.6.3)"
				},
				"gnuGlobal.debugMode": {
					"type": [
						"string"
					],
					"enum": [
						"Enabled",
						"Disabled"
					],
					"default": "Disabled",
					"scope": "window",
					"description": "Log more information to debug this extension. Default is Disabled."
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"postinstall": "node ./node_modules/vscode/bin/install",
		"test": "npm run compile && node ./node_modules/vscode/bin/test"
	},
	"devDependencies": {
		"@types/mocha": "^5.2.7",
		"@types/node": "^12.7.5",
		"tslint": "^5.20.0",
		"typescript": "^3.6.3",
		"vscode": "^1.1.36"
	},
	"dependencies": {
		"iconv-lite": "^0.5.0",
		"vsce": "^1.66.0"
	},
	"__metadata": {
		"id": "bcf3aea4-907d-411e-8f24-1cf3c4a6802a",
		"publisherId": "827a42f8-5ce0-4b3b-8507-094d553d27d1",
		"publisherDisplayName": "Lin Chieh"
	}
}