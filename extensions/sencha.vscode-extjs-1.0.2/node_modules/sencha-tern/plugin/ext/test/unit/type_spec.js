"use strict";

var TestUtil = require('./../lib/test_util');
var chai = require('./../lib/chai_setup');
var _ = require('lodash');
var path = require('path');

var baseDir = process.cwd();
var testRoot = path.join(baseDir, 'plugin', 'ext');

describe('Type completion', function() {
    afterEach(TestUtil.cleanup); // rebuild the server before each test so that test classes don't bleed over between tests
    it('should complete method parameters with types', function () {
        TestUtil.assertTypes('describe/multiparams', 'caret',
            {
                "type":"function()",
                "name":"testMethod",
                "exprName":"testMethod",
                "origin": path.join(testRoot,"test", "resources", "describe", "multiparams", "Child.js"),
                "return": {"type": "fn()"},
                "params":[
                            {"name":"p1","type":"String"},
                            {"name":"p2","type":"Bool"},
                            {"name":"p3","type":"Fn()"},
                            {"name":"p4","type":"Object"},
                            {"name":"p5","type":"Number"},
                            {"name":"p6","type":"Symbol"},
                            {"name":"p7","type":"RegExp","current":true},
                            {"name":"p8","type":"Array"}],
                "url": {
                    "className": "Child",
                    "isStatic": false,
                    "name": "testMethod",
                    "type": "method"
                }
            });
    });

    it('should complete method with a single parameter', function () {
        TestUtil.assertTypes('describe/oneparam', 'caret', {
            "type": "function()",
            "name": "testMethod",
            "exprName": "testMethod",
            "origin": path.join(testRoot, "test", "resources", "describe", "oneparam", "Child.js"),
            "params": [{
                "name": "x",
                "type": "String",
                "current": true
            }],
            "url": {
                "className": "Child",
                "isStatic": false,
                "name": "testMethod",
                "type": "method"
            }
        });
    });

    it('should complete method with a no parameters', function () {
        TestUtil.assertTypes('describe/noparam', 'caret',
            {
                type:'?'
            });
    });

    it('should complete method parameters from parent class', function () {
        TestUtil.assertTypes('describe/parentparams', 'caret', {
            "type": "function()",
            "name": "testMethod",
            "exprName": "testMethod",
            "origin": path.join(testRoot, "test", "resources", "describe", "parentparams", "Parent.js"),
            "params": [{
                "name": "x",
                "type": "String",
                "current": true
            }, {
                "name": "y",
                "type": "Number"
            }, {
                "name": "z",
                "type": "Fn()"
            }],
            "url": {
                "className": "Parent",
                "isStatic": false,
                "name": "testMethod",
                "type": "method"
            }
        });
    });

    it('should complete parameter for return type', function () {
        TestUtil.assertTypes('describe/returnparam', 'caret', {
            "type": "function()",
            "name": "testMethod",
            "exprName": "testMethod",
            "origin": path.join(testRoot, "test", "resources", "describe", "returnparam", "Child.js"),
            "params": [{
                "name": "a",
                "type": "String",
                "current": true
            }, {
                "name": "b",
                "type": "Number"
            }, {
                "name": "c",
                "type": "Array"
            }],
            "url": {
                "className": "Child",
                "isStatic": false,
                "name": "testMethod",
                "type": "method"
            }
        });
    });

    it('should return correct variable type', function () {
        TestUtil.assertTypes('describe/vartypes/defined', 'caret', {
            "type": "string",
            "name": "string",
            "doc": "The String global object is a constructor for strings, or a sequence of characters.",
            "url": "https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String"
        });
    });

    it('should return empty type', function () {
        TestUtil.assertTypes('describe/vartypes/undefined', 'caret', {
            "type": "?",
            "exprName": "str"
        });
    });

});