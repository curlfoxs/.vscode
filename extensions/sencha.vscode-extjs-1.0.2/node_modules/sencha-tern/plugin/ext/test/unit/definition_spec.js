var TestUtil = require('./../lib/test_util');
var chai = require('./../lib/chai_setup');
var _ = require('lodash');
var urlBuilder = require('../../lib/urlFor');

describe('definition lookup', function() {
    afterEach(TestUtil.cleanup); // rebuild the server before each test so that test classes don't bleed over between tests

    it('should find method definitions', function() {
        TestUtil.assertDefinedAt('definition/method', 'caret', 'MyClass.js', 'origin');
    });

    it('should find class definitions', function() {
        TestUtil.assertDefinedAt('definition/className', 'caret', 'MyClass.js', 'origin');
    });

    it('should find xtypes', function() {
        TestUtil.assertDefinedAt('definition/xtype', 'caret', 'MyClass.js', 'origin');
    });

    it('should return the definition from the correct sdk', function() {
        TestUtil.assertDefinedAt('definition/sdk', 'ext', 'ext/src/Panel.js', 'ext-origin');
        TestUtil.assertDefinedAt('definition/sdk', 'touch', 'touch/src/Panel.js', 'touch-origin');
    });

    it('should support mvc references', function() {
        TestUtil.assertDefinedAt('definition/mvc', 'caret', 'app/User.js', 'origin');
    });

    it('should support mvc references in arrays', function() {
        TestUtil.assertDefinedAt('definition/mvc-array', 'caret', 'app/Users.js', 'origin');
    });

    it('should support bind expressions', function() {
        //TestUtil.assertDefinedAt('definition/bindExpression', 'model', 'UserModel.js', 'modelOrigin');
        TestUtil.assertDefinedAt('definition/bindExpression', 'field', 'User.js', 'fieldOrigin');
    });

    it('should find controller methods', function() {
        TestUtil.assertDefinedAt('definition/controllerMethods', 'caret', 'Controller.js', 'origin');
    });

    it('should find configs', function() {
        TestUtil.assertDefinedAt('definition/configs', 'comment', 'View.js', 'commentOrigin');
        TestUtil.assertDefinedAt('definition/configs', 'property', 'View.js', 'propertyOrigin');
    });

    it('should find events', function() {
        TestUtil.assertDefinedAt('definition/events', 'caret', 'View.js', 'origin');
    });

    it('should find the class in configured toolkit in a classic app', function() {
        TestUtil.assertDefinedAt('definition/toolkit.classic', 'caret', 'ext/classic/src/Button.js', 'origin');
    });

    it('should find the class in configured toolkit in a modern app', function() {
        TestUtil.assertDefinedAt('definition/toolkit.modern', 'caret', 'ext/modern/src/Button.js', 'origin');
    });

    it('should find the class corresponding toolkit in a universal app', function() {
        TestUtil.assertDefinedAt('definition/toolkit', 'classic', 'ext/classic/src/Button.js', 'classic-origin');
        TestUtil.assertDefinedAt('definition/toolkit', 'modern', 'ext/modern/src/Button.js', 'modern-origin');
    });

    it('should go to fields in a bound store', function() {
        TestUtil.assertDefinedAt('definition/storeFields', 'caret', 'app/UserModel.js', 'origin');
    });

    it('should go to fields in a store referenced by id', function() {
        TestUtil.assertDefinedAt('definition/storeFields.id', 'caret', 'app/Users.js', 'origin');
    });

    it('should go to fields in a store referenced by short name', function() {
        TestUtil.assertDefinedAt('definition/storeFields.id', 'caret', 'app/Users.js', 'origin');
    });

    it('should go to fields in a store model', function() {
        TestUtil.assertDefinedAt('definition/modelFields', 'caret', 'app/User.js', 'origin');
    });

    it('should go to a store by id', function() {
        TestUtil.assertDefinedAt('definition/storeIds', 'users', 'app/store/Users.js', 'shortName');
        TestUtil.assertDefinedAt('definition/storeIds', 'roles', 'app/store/Roles.js', 'storeId');
    });

    it('should go to reference defined in a ViewController', function() {
       TestUtil.assertDefinedAt('definition/references', 'ref', 'MyView.js', 'refOrigin');
    });

    it('should look up a property with a type in doc comments', function() {
        TestUtil.assertDefinedAt('definition/propertyWithType', 'caret', 'test.js', 'origin');
    });
});