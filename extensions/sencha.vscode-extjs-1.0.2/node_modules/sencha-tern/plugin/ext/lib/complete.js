"use strict";

var tern = require('../../../lib/tern');
var _ = require('lodash');
var referenceAt = require('./referenceAt');

module.exports = function(file, query) {
    var pos = tern.resolvePos(file, query.end),
        reference = referenceAt(file, pos);

    if (reference) {
        var completions = reference.getCompletions();

        if (!completions) return;

        var pos = tern.resolvePos(file, query.end),
            matches = file.text.slice(0, pos).match(/\w+$/);

        // filter the completions based on the text that has already been typed
        if (matches) {
            var prefix = matches[0].toLowerCase();
            completions = _.filter(completions, function(c) { return c.name.toLowerCase().indexOf(prefix) !== -1 })
        }

        completions.forEach(function(c) {
            c.priority = c.name.indexOf(prefix) === 0 ? 0 : 1;
            c.sencha = true;
            if (reference.wrapInQuotes) c.insertionText = "'" + c.name + "'";
        });

        return {
            start: tern.outputPos(query, file, pos - (prefix ? prefix.length : 0)),
            end: tern.outputPos(query, file, pos),
            completions: completions
        };
    }
};
