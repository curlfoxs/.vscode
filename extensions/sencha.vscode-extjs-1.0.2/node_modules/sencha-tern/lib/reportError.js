var stackTrace = require('stack-trace'),
    rollbar = require('rollbar'),
    path = require('path'),
    version = require(path.join(__dirname, '..', 'package.json')).version;

var appArg = process.argv.indexOf("--app"), app = 'unknown';
if (appArg > -1) {
    app = process.argv[appArg + 1];
}

var environment = app + ' (tern v' + version + ')';
console.log('environment: ' + environment);

rollbar.init('60989f387a1044eeaacaef4bb2ece2c0', {
    codeVersion: version,
    environment: environment
});

module.exports = {
    /**
     * Reports the error to rollbar
     * @param error
     * @param request
     * @returns {Promise}
     */
    report: function(error, request) {
        // Don't report TernErrors, such as when a type cannot be found at the current position.  These are more like
        // expected functionality than hard exceptions.
        if (error.name !== 'TernError') rollbar.handleError(error, request, function() {
            console.log('reported error to rollbar');
        });
    },

    /**
     * Returns the error's stack frames as an array of call site objects.
     * @param error
     */
    getFrames: function(error) {
        return stackTrace.parse(error);
    }
};