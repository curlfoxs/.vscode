'use strict';

const Base = require('orion-core/lib/Base');

const util = require('util');
const argv = process.argv;

const allowedMessages = {
    run: 1,
    terminate: 1
}

/**
 * Base class for sandbox processes
 * 
 * Derived classes should fire:
 *     - sandboxCreated
 *     - sandboxReady
 *     - sandboxClosed
 *     
 * Derived classes should implement:
 *     - run(message)
 */
class SandboxProcess extends Base {
    
    ctor () {
        var me = this;
        
        process.on('message', function (message) {
            var type = message.type;
            if (allowedMessages[type]) {
                me[type](message);
            } else {
                console.error('Invalid message received: ' + type);
            }
        });
        
        var keepalive = setInterval(function () {
            if (me._terminated) {
                clearInterval(keepalive);
            }
        }, 1000);
    }
    
    send (m) {
        // log should only happen when running a detached
        // sandbox for internal debugging purposes
        process.send ? process.send(m) : console.log(m);
    }
    
    terminate () {
        this._terminated = true;
    }
    
}

module.exports = SandboxProcess;


