"use strict";

var co = require('co');
var util = require('util');
var Agent = require('./Agent');
var SandboxProxy = require('orion-core/lib/model/browser/SandboxProxy');

/**
 * This class represents a remote browser launched by a Sandbox
 */
class SandboxAgent extends Agent {
    
    static get meta () {
        return {
            prototype: {
                isSandboxAgent: true,
                terminateOnFinish: true
            }
        };
    }
    
    get browserFullName () {
        return this.agentGroup.browser.displayLabel;
    }
    
    get userAgentString () {
        return null;
    }
    
    launch() {
        var me = this,
            browser = me.agentGroup.browser,
            sandboxProxy;
        
        sandboxProxy = me.sandboxProxy = new SandboxProxy({
            browser: browser,
            proxyPort: me.runner.proxy.port,
            url: me.url,
            agent: me
        });
        return sandboxProxy.launch();
        
        // TODO watchdogs - see RemoteAgent
    }
    
    terminate () {
        var me = this,
            sandboxProxy = me.sandboxProxy;

        if (sandboxProxy) {
            sandboxProxy.terminate();
            me.fire({
                type: 'terminated',
                agent: me
            });
        }
    }
    
    getTestOptions () {
        var testOptions = super.getTestOptions();
        testOptions.driverConfig = this.sandboxProxy.getDriverConfig();
        testOptions.subjectUrl = this.runner.getSubjectUrl();
        testOptions.proxyPort = this.runner.proxy.port; // TODO do we need this for Recorder???
        return testOptions;
    }

    stopRecording() {
        var me = this,
            message = {
                type: 'stopRecording'
            };

        me.isRunning = false;
        me.sendMessage(message, true);
    }
    
    screenshot (message) {
        var me = this;
        if (me.archiver && me.archiver.enableScreenshots) {
            return me.archiver.saveScreenshot(message.name, message.data, me);
        }
    }

}

module.exports = SandboxAgent;
